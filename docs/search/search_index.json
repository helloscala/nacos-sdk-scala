{"docs":[{"location":"/paradox.json","text":"","title":""},{"location":"/index.html","text":"","title":"Nacos SDK for Scala"},{"location":"/index.html#nacos-sdk-for-scala","text":"Quick Start 依赖 编程使用 HOCON 配置 服务自动注册 HOCON 完整配置 Akka Discovery 依赖 配置 Play WS 依赖 使用","title":"Nacos SDK for Scala"},{"location":"/quickstart.html","text":"","title":"Quick Start"},{"location":"/quickstart.html#quick-start","text":"","title":"Quick Start"},{"location":"/quickstart.html#依赖","text":"要在项目中使用，请添加以下依赖：\nsbt libraryDependencies += \"me.yangbajing.nacos4s\" %% \"nacos-client-scala\" % \"1.2.0\" Maven <dependency>\n  <groupId>me.yangbajing.nacos4s</groupId>\n  <artifactId>nacos-client-scala_2.12</artifactId>\n  <version>1.2.0</version>\n</dependency> Gradle dependencies {\n  compile group: 'me.yangbajing.nacos4s', name: 'nacos-client-scala_2.12', version: '1.2.0'\n}\n并添加以下依赖源：\nresolvers += Resolver.bintrayRepo(\"helloscala\", \"maven\")","title":"依赖"},{"location":"/quickstart.html#编程使用","text":"","title":"编程使用"},{"location":"/quickstart.html#nacos4snamingservice","text":"import yangbajing.nacos4s.client.naming.Nacos4sNamingService\nimport yangbajing.nacos4s.client.util.Nacos4s\n\nobject NamingDemo extends App {\n  val namingService: Nacos4sNamingService = Nacos4s.namingService(\"127.0.0.0:8848\", \"\")\n  val status = namingService.getServerStatus\n  assert(status == \"UP\")\n}","title":"Nacos4sNamingService"},{"location":"/quickstart.html#nacos4sconfigservice","text":"import yangbajing.nacos4s.client.config.Nacos4sConfigService\nimport yangbajing.nacos4s.client.util.Nacos4s\n\nobject ConfigDemo extends App {\n  val configService: Nacos4sConfigService = Nacos4s.configService(\"127.0.0.0:8848\", \"\")\n  val status = configService.getServerStatus\n  assert(status == \"UP\")\n}","title":"Nacos4sConfigService"},{"location":"/quickstart.html#hocon-配置","text":"Nacos4s 支持使用 HOCON 作为配置文件。\napplication.conf\nnacos4s.client {\n  naming {\n    serverAddr = \"127.0.0.1:8848\"\n    namespace = \"\"\n    autoRegisterInstance = on # true\n    serviceName = \"me.yangbajing.nacos4s\"\n    ip = \"127.0.0.1\"\n    port = 9999\n  }\n  config {\n    serverAddr = \"127.0.0.1:8848\"\n    namespace = \"\"\n  }\n}\n代码\nval configService = Nacos4s.configService(ConfigFactory.load().getConfig(\"nacos4s.client.config\"))\nval namingService = Nacos4s.namingService(ConfigFactory.load().getConfig(\"nacos4s.client.config\"))","title":"HOCON 配置"},{"location":"/quickstart.html#服务自动注册","text":"在使用 ConfigFactory 初始化 Nacos4sNamingService 时设置 autoRegisterInstance = on 可自动将服务注册到 Nacos。","title":"服务自动注册"},{"location":"/quickstart.html#hocon-完整配置","text":"nacos4s.client.naming {\n  // 是否自动注册服务到 Nacos\n  autoRegisterInstance = false\n\n  // 注册服务组\n  group = \"DEFAULT_GROUP\"\n\n  // 连接超时\n  timeoutMs = 30.seconds\n\n  // Nacos 地址\n  serverAddr = \"127.0.0.1:8849\"\n\n  // Nacos 名字空间\n  namespace = \"me.yangbajing.nacos\"\n\n  // 注册服务名\n  serviceName = \"161e415e-56a5-4eeb-9897-f84a268caa58\"\n\n  // 注册服务IP，默认读取本机第一个外网地址。\n  // 若读取失败建议手动设置\n  #ip = \"127.0.0.1\"\n\n  // 注册服务端口\n  port = 8080\n}","title":"HOCON 完整配置"},{"location":"/akka-discovery.html","text":"","title":"Akka Discovery"},{"location":"/akka-discovery.html#akka-discovery","text":"","title":"Akka Discovery"},{"location":"/akka-discovery.html#依赖","text":"要在项目中使用，请添加以下依赖：\nsbt libraryDependencies += \"me.yangbajing.nacos4s\" %% \"nacos-akka\" % \"1.2.0\" Maven <dependency>\n  <groupId>me.yangbajing.nacos4s</groupId>\n  <artifactId>nacos-akka_2.12</artifactId>\n  <version>1.2.0</version>\n</dependency> Gradle dependencies {\n  compile group: 'me.yangbajing.nacos4s', name: 'nacos-akka_2.12', version: '1.2.0'\n}","title":"依赖"},{"location":"/akka-discovery.html#配置","text":"配置 Akka Discovery 使用 Nacos4sNamingService\nakka.discovery {\n  method = nacos\n  nacos {\n    // 实现了ServiceDiscovery的服务发现类完整路径\n    class = yangbajing.nacos4s.akka.NacosServiceDiscovery\n\n    // 只返回健康实例\n    onlyHealth = true\n\n    // 只返回一个健康实例\n    oneHealth = true\n\n    namingConfig = nacos4s.client.naming\n  }\n}\nnacos4s.client.naming 配置见： nacos4s.client.naming","title":"配置"},{"location":"/play-ws.html","text":"","title":"Play WS"},{"location":"/play-ws.html#play-ws","text":"","title":"Play WS"},{"location":"/play-ws.html#依赖","text":"要在项目中使用，请添加以下依赖：\nsbt libraryDependencies += \"me.yangbajing.nacos4s\" %% \"nacos-play-ws\" % \"1.2.0\" Maven <dependency>\n  <groupId>me.yangbajing.nacos4s</groupId>\n  <artifactId>nacos-play-ws_2.12</artifactId>\n  <version>1.2.0</version>\n</dependency> Gradle dependencies {\n  compile group: 'me.yangbajing.nacos4s', name: 'nacos-play-ws_2.12', version: '1.2.0'\n}","title":"依赖"},{"location":"/play-ws.html#使用","text":"与原生的 play-ws 使用唯一的区别就是在 Inject 时添加 @Named(\"nacos\") 注解。","title":"使用"},{"location":"/play-ws.html#scala-api","text":"import javax.inject.{ Inject, Named }\nimport play.api.libs.ws.WSClient\n\nclass NacosWSClientController @Inject() (@Named(\"nacos\") wsClient: WSClient) {\n  def page = {\n    val req = wsClient.url(\"http://example-service/api/health\")\n  }\n}","title":"Scala API"},{"location":"/play-ws.html#java-api","text":"import play.libs.ws.WSClient;\nimport play.libs.ws.WSRequest;\n\nimport javax.inject.Inject;\nimport javax.inject.Named;\n\npublic class NacosWSClientController {\n    private final WSClient wsClient;\n\n    @Inject\n    public NacosWSClientController(@Named(\"nacos\") WSClient wsClient) {\n        this.wsClient = wsClient;\n    }\n\n    public void index() {\n        WSRequest req = wsClient.url(\"http://example-service/api/health\");\n    }\n}","title":"Java API"}]}